#include <cstdint>

struct Utf8CaseGroup
{
	uint32_t lower;
	uint32_t upper;
	unsigned count;
};


struct Utf8CaseMapping
{
	uint32_t lower;
	uint32_t upper;
};


/*
 * In this group upper letters are shifted by constant offset.
 * There are count letters in every set.
 * lower + n corresponds to upper + n, where n is in <0, count)
 */
static const Utf8CaseGroup g_caseGroup1[] = {
	//{0x0061, 0x0041, 26},  // handled separately as optimization
	{0x00e0, 0x00c0, 23},
	{0x00f8, 0x00d8, 7},
	{0x023f, 0x2c7e, 2},
	{0x0258, 0x018e, 2},
	{0x028a, 0x01b1, 2},
	{0x037b, 0x03fd, 3},
	{0x03ad, 0x0388, 2},
	{0x03ae, 0x0389, 2},
	{0x03b1, 0x0391, 17},
	{0x03c3, 0x03a3, 9},
	{0x03cd, 0x038e, 2},
	{0x0430, 0x0410, 32},
	{0x0450, 0x0400, 16},
	{0x0561, 0x0531, 38},
	{0x1d48, 0x1d30, 2},
	{0x1d57, 0x1d40, 2},
	{0x1f00, 0x1f08, 8},
	{0x1f10, 0x1f18, 6},
	{0x1f20, 0x1f28, 8},
	{0x1f30, 0x1f38, 8},
	{0x1f40, 0x1f48, 6},
	{0x1f60, 0x1f68, 8},
	{0x1fb0, 0x1fb8, 2},
	{0x1fd0, 0x1fd8, 2},
	{0x1fe0, 0x1fe8, 2},
	{0x249c, 0x1f110, 26},
	{0x24d0, 0x24b6, 26},
	{0x2c30, 0x2c00, 47},
	{0x2d00, 0x10a0, 38},
	{0xff41, 0xff21, 26},
	{0x10428, 0x10400, 40},
	{0x1d41a, 0x1d400, 26},
	{0x1d44e, 0x1d434, 7},
	{0x1d456, 0x1d43c, 18},
	{0x1d482, 0x1d468, 26},
	{0x1d4b8, 0x1d49e, 2},
	{0x1d4bf, 0x1d4a5, 2},
	{0x1d4c5, 0x1d4ab, 2},
	{0x1d4c8, 0x1d4ae, 8},
	{0x1d4ea, 0x1d4d0, 26},
	{0x1d51e, 0x1d504, 2},
	{0x1d521, 0x1d507, 4},
	{0x1d527, 0x1d50d, 8},
	{0x1d530, 0x1d516, 7},
	{0x1d552, 0x1d538, 2},
	{0x1d555, 0x1d53b, 4},
	{0x1d55a, 0x1d540, 5},
	{0x1d564, 0x1d54a, 7},
	{0x1d586, 0x1d56c, 26},
	{0x1d5ba, 0x1d5a0, 26},
	{0x1d5ee, 0x1d5d4, 26},
	{0x1d622, 0x1d608, 26},
	{0x1d656, 0x1d63c, 26},
	{0x1d68a, 0x1d670, 26},
	{0x1d6c2, 0x1d6a8, 17},
	{0x1d6d4, 0x1d6ba, 7},
	{0x1d6fc, 0x1d6e2, 17},
	{0x1d70e, 0x1d6f4, 7},
	{0x1d736, 0x1d71c, 17},
	{0x1d748, 0x1d72e, 7},
	{0x1d770, 0x1d756, 17},
	{0x1d782, 0x1d768, 7},
	{0x1d7aa, 0x1d790, 17},
	{0x1d7bc, 0x1d7a2, 7},
	{0xe0061, 0xe0041, 26},
};


/*
 * In this group upper and lower letters are mixed, casing is determined by
 * LSB bit.
 * lower + 2*n corresponds to upper + 2*n, where n in in <0, count)
 */
static const Utf8CaseGroup g_caseGroup2[] = {
	{0x0101, 0x0100, 24},
	{0x0133, 0x0132, 3},
	{0x013a, 0x0139, 8},
	{0x014b, 0x014a, 23},
	{0x017a, 0x0179, 3},
	{0x0183, 0x0182, 2},
	{0x01a1, 0x01a0, 3},
	{0x01b4, 0x01b3, 2},
	{0x01ce, 0x01cd, 8},
	{0x01df, 0x01de, 9},
	{0x01f9, 0x01f8, 20},
	{0x0223, 0x0222, 9},
	{0x0247, 0x0246, 2},
	{0x024d, 0x024c, 2},
	{0x02b0, 0x1d34, 2},
	{0x0371, 0x0370, 2},
	{0x03ad, 0x0388, 2},
	{0x03e3, 0x03e2, 7},
	{0x0461, 0x0460, 17},
	{0x048b, 0x048a, 27},
	{0x04c2, 0x04c1, 7},
	{0x04d1, 0x04d0, 44},
	{0x1e01, 0x1e00, 75},
	{0x1ea1, 0x1ea0, 48},
	{0x1f51, 0x1f59, 4},
	{0x1f72, 0x1fc8, 2},
	{0x2c68, 0x2c67, 3},
	{0x2c81, 0x2c80, 50},
	{0x2cec, 0x2ceb, 2},
	{0xa641, 0xa640, 23},
	{0xa681, 0xa680, 12},
	{0xa723, 0xa722, 7},
	{0xa733, 0xa732, 31},
	{0xa77a, 0xa779, 2},
	{0xa77f, 0xa77e, 5},
	{0xa7a1, 0xa7a0, 5},
};


/*
 * Simple 1-1 mapping of lower and upper letters.
 */
static const Utf8CaseMapping g_caseSingle[] = {
	{0x00df, 0x1e9e},
	{0x00ff, 0x0178},
	{0x0180, 0x0243},
	{0x0188, 0x0187},
	{0x018c, 0x018b},
	{0x0192, 0x0191},
	{0x0199, 0x0198},
	{0x019a, 0x023d},
	{0x019e, 0x0220},
	{0x01a8, 0x01a7},
	{0x01ad, 0x01ac},
	{0x01b0, 0x01af},
	{0x01b9, 0x01b8},
	{0x01bd, 0x01bc},
	{0x01c6, 0x01c4},
	{0x01c9, 0x01c7},
	{0x01cc, 0x01ca},
	{0x01f3, 0x01f1},
	{0x01f5, 0x01f4},
	{0x023c, 0x023b},
	{0x0242, 0x0241},
	{0x0250, 0x2c6f},
	{0x0251, 0x2c6d},
	{0x0252, 0x2c70},
	{0x0253, 0x0181},
	{0x0254, 0x0186},
	{0x0257, 0x018a},
	{0x025b, 0x0190},
	{0x0260, 0x0193},
	{0x0263, 0x0194},
	{0x0265, 0xa78d},
	{0x0268, 0x0197},
	{0x0269, 0x0196},
	{0x026b, 0x2c62},
	{0x026f, 0x019c},
	{0x0271, 0x2c6e},
	{0x0272, 0x019d},
	{0x027d, 0x2c64},
	{0x0283, 0x01a9},
	{0x0288, 0x01ae},
	{0x0289, 0x0244},
	{0x028c, 0x0245},
	{0x0292, 0x01b7},
	{0x02b3, 0x1d3f},
	{0x02b7, 0x1d42},
	{0x02e1, 0x1d38},
	{0x0377, 0x0376},
	{0x03ac, 0x0386},
	{0x03ac, 0x0386},
	{0x03cc, 0x038c},
	{0x03cc, 0x038c},
	{0x03cd, 0x038e},
	{0x03ce, 0x038f},
	{0x03f8, 0x03f7},
	{0x03fb, 0x03fa},
	{0x1d43, 0x1d2c},
	{0x1d47, 0x1d2e},
	{0x1d4d, 0x1d33},
	{0x1d4f, 0x1d37},
	{0x1d50, 0x1d39},
	{0x1d52, 0x1d3c},
	{0x1d56, 0x1d3e},
	{0x1d5b, 0x2c7d},
	{0x1d79, 0xa77d},
	{0x1d7d, 0x2c63},
	{0x1f70, 0x1fba},
	{0x1f76, 0x1fda},
	{0x1f78, 0x1ff8},
	{0x1f7a, 0x1fea},
	{0x1f7c, 0x1ffa},
	{0x1fe5, 0x1fec},
	{0x2113, 0x2112},
	{0x212f, 0x2130},
	{0x213c, 0x213f},
	{0x213d, 0x213e},
	{0x2146, 0x2145},
	{0x214e, 0x2132},
	{0x2c61, 0x2c60},
	{0x2c65, 0x023a},
	{0x2c66, 0x023e},
	{0x2c73, 0x2c72},
	{0x2c76, 0x2c75},
	{0xa78c, 0xa78b},
	{0xa791, 0xa790},
	{0x1d4b6, 0x1d49c},
	{0x1d4c3, 0x1d4a9},
	{0x1d560, 0x1d546},
	{0x1d7cb, 0x1d7ca},
	{0x1f521, 0x1f520},
};

